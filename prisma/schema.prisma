generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model AgendaItem {
  id        String  @id
  content   String
  order     Int
  meetingId String
  Meeting   Meeting @relation(fields: [meetingId], references: [id])
}

model Budget {
  id             String           @id
  year           Int
  totalBudget    Float
  municipalityId String
  createdAt      DateTime         @default(now())
  Municipality   Municipality     @relation(fields: [municipalityId], references: [id])
  BudgetCategory BudgetCategory[]
}

model BudgetCategory {
  id       String @id
  name     String
  amount   Float
  color    String
  budgetId String
  Budget   Budget @relation(fields: [budgetId], references: [id])
}

model Comment {
  id          String      @id
  content     String
  author      String
  upvotes     Int         @default(0)
  downvotes   Int         @default(0)
  threadId    String
  createdAt   DateTime    @default(now())
  ForumThread ForumThread @relation(fields: [threadId], references: [id])
}

model ForumThread {
  id             String       @id
  title          String
  content        String
  author         String
  upvotes        Int          @default(0)
  downvotes      Int          @default(0)
  municipalityId String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime
  Comment        Comment[]
  Municipality   Municipality @relation(fields: [municipalityId], references: [id])
  ThreadTag      ThreadTag[]
}

model Meeting {
  id             String       @id
  title          String
  date           DateTime
  time           String
  committee      String
  status         String
  summary        String?      // Meeting summary/minutes
  municipalityId String
  createdAt      DateTime     @default(now())
  AgendaItem     AgendaItem[]
  Municipality   Municipality @relation(fields: [municipalityId], references: [id])
}

model Municipality {
  id          String        @id
  name        String
  state       String
  zipCode     String
  population  Int
  isServiced  Boolean       @default(false)
  latitude    Float
  longitude   Float
  slug        String        @unique
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  Budget      Budget[]
  ForumThread ForumThread[]
  Meeting     Meeting[]
}

model ThreadTag {
  id          String      @id
  name        String
  threadId    String
  ForumThread ForumThread @relation(fields: [threadId], references: [id])
}
